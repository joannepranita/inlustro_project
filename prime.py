def prime_generator(n):
  """Generator function that generates all the prime numbers less than n."""
  for i in range(2, n + 1):
    is_prime = True
    for j in range(2, i):
      if i % j == 0:
        is_prime = False
        break
    if is_prime:
      yield i


#@log
def prime_iterator(n):
  """Iterator object that iterates over the prime numbers generated by prime_generator."""
  for prime in prime_generator(n):
    yield prime


def log(func):
  """Decorator that adds a logging function to the decorated function."""
  def wrapper(*args, **kwargs):
    print(func._name_, args, kwargs)
    return func(*args, **kwargs)
  return wrapper


if __name__ == "__main__":
  for prime in prime_iterator(100):
    print(prime)
